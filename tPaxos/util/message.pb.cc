// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tPaxos {
class PaxosMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaxosMsg>
      _instance;
} _PaxosMsg_default_instance_;
}  // namespace tPaxos
namespace protobuf_message_2eproto {
void InitDefaultsPaxosMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tPaxos::_PaxosMsg_default_instance_;
    new (ptr) ::tPaxos::PaxosMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tPaxos::PaxosMsg::InitAsDefaultInstance();
}

void InitDefaultsPaxosMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPaxosMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, gltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, instanceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, iltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, proposalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, acceptedproposalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, acceptednodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, reject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tPaxos::PaxosMsg, promisedproposalid_),
  1,
  2,
  3,
  4,
  5,
  0,
  6,
  7,
  8,
  9,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::tPaxos::PaxosMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tPaxos::_PaxosMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rmessage.proto\022\006tPaxos\"\321\001\n\010PaxosMsg\022\016\n\006"
      "GLType\030\001 \002(\r\022\022\n\nInstanceID\030\002 \001(\r\022\016\n\006Node"
      "ID\030\003 \001(\r\022\016\n\006ILType\030\004 \001(\r\022\022\n\nProposalID\030\005"
      " \001(\r\022\r\n\005Value\030\006 \001(\014\022\032\n\022AcceptedProposalI"
      "D\030\007 \001(\r\022\026\n\016AcceptedNodeID\030\010 \001(\r\022\016\n\006Rejec"
      "t\030\t \001(\010\022\032\n\022PromisedProposalID\030\n \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 235);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_message_2eproto
namespace tPaxos {

// ===================================================================

void PaxosMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaxosMsg::kGLTypeFieldNumber;
const int PaxosMsg::kInstanceIDFieldNumber;
const int PaxosMsg::kNodeIDFieldNumber;
const int PaxosMsg::kILTypeFieldNumber;
const int PaxosMsg::kProposalIDFieldNumber;
const int PaxosMsg::kValueFieldNumber;
const int PaxosMsg::kAcceptedProposalIDFieldNumber;
const int PaxosMsg::kAcceptedNodeIDFieldNumber;
const int PaxosMsg::kRejectFieldNumber;
const int PaxosMsg::kPromisedProposalIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaxosMsg::PaxosMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_message_2eproto::InitDefaultsPaxosMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tPaxos.PaxosMsg)
}
PaxosMsg::PaxosMsg(const PaxosMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&gltype_, &from.gltype_,
    static_cast<size_t>(reinterpret_cast<char*>(&promisedproposalid_) -
    reinterpret_cast<char*>(&gltype_)) + sizeof(promisedproposalid_));
  // @@protoc_insertion_point(copy_constructor:tPaxos.PaxosMsg)
}

void PaxosMsg::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gltype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promisedproposalid_) -
      reinterpret_cast<char*>(&gltype_)) + sizeof(promisedproposalid_));
}

PaxosMsg::~PaxosMsg() {
  // @@protoc_insertion_point(destructor:tPaxos.PaxosMsg)
  SharedDtor();
}

void PaxosMsg::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaxosMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaxosMsg::descriptor() {
  ::protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaxosMsg& PaxosMsg::default_instance() {
  ::protobuf_message_2eproto::InitDefaultsPaxosMsg();
  return *internal_default_instance();
}

PaxosMsg* PaxosMsg::New(::google::protobuf::Arena* arena) const {
  PaxosMsg* n = new PaxosMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaxosMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:tPaxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&gltype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&acceptednodeid_) -
        reinterpret_cast<char*>(&gltype_)) + sizeof(acceptednodeid_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&reject_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&promisedproposalid_) -
        reinterpret_cast<char*>(&reject_)) + sizeof(promisedproposalid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaxosMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tPaxos.PaxosMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 GLType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gltype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 InstanceID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_instanceid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 NodeID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ILType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_iltype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ProposalID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_proposalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &proposalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes Value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AcceptedProposalID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_acceptedproposalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acceptedproposalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AcceptedNodeID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_acceptednodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &acceptednodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Reject = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_reject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 PromisedProposalID = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_promisedproposalid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promisedproposalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tPaxos.PaxosMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tPaxos.PaxosMsg)
  return false;
#undef DO_
}

void PaxosMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tPaxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 GLType = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gltype(), output);
  }

  // optional uint32 InstanceID = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instanceid(), output);
  }

  // optional uint32 NodeID = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nodeid(), output);
  }

  // optional uint32 ILType = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->iltype(), output);
  }

  // optional uint32 ProposalID = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->proposalid(), output);
  }

  // optional bytes Value = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->value(), output);
  }

  // optional uint32 AcceptedProposalID = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->acceptedproposalid(), output);
  }

  // optional uint32 AcceptedNodeID = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->acceptednodeid(), output);
  }

  // optional bool Reject = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->reject(), output);
  }

  // optional uint32 PromisedProposalID = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->promisedproposalid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tPaxos.PaxosMsg)
}

::google::protobuf::uint8* PaxosMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tPaxos.PaxosMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 GLType = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gltype(), target);
  }

  // optional uint32 InstanceID = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instanceid(), target);
  }

  // optional uint32 NodeID = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nodeid(), target);
  }

  // optional uint32 ILType = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->iltype(), target);
  }

  // optional uint32 ProposalID = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->proposalid(), target);
  }

  // optional bytes Value = 6;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->value(), target);
  }

  // optional uint32 AcceptedProposalID = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->acceptedproposalid(), target);
  }

  // optional uint32 AcceptedNodeID = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->acceptednodeid(), target);
  }

  // optional bool Reject = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->reject(), target);
  }

  // optional uint32 PromisedProposalID = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->promisedproposalid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tPaxos.PaxosMsg)
  return target;
}

size_t PaxosMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tPaxos.PaxosMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 GLType = 1;
  if (has_gltype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gltype());
  }
  // optional bytes Value = 6;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (_has_bits_[0 / 32] & 252u) {
    // optional uint32 InstanceID = 2;
    if (has_instanceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->instanceid());
    }

    // optional uint32 NodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nodeid());
    }

    // optional uint32 ILType = 4;
    if (has_iltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->iltype());
    }

    // optional uint32 ProposalID = 5;
    if (has_proposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->proposalid());
    }

    // optional uint32 AcceptedProposalID = 7;
    if (has_acceptedproposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acceptedproposalid());
    }

    // optional uint32 AcceptedNodeID = 8;
    if (has_acceptednodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->acceptednodeid());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool Reject = 9;
    if (has_reject()) {
      total_size += 1 + 1;
    }

    // optional uint32 PromisedProposalID = 10;
    if (has_promisedproposalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->promisedproposalid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaxosMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tPaxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PaxosMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaxosMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tPaxos.PaxosMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tPaxos.PaxosMsg)
    MergeFrom(*source);
  }
}

void PaxosMsg::MergeFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tPaxos.PaxosMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      gltype_ = from.gltype_;
    }
    if (cached_has_bits & 0x00000004u) {
      instanceid_ = from.instanceid_;
    }
    if (cached_has_bits & 0x00000008u) {
      nodeid_ = from.nodeid_;
    }
    if (cached_has_bits & 0x00000010u) {
      iltype_ = from.iltype_;
    }
    if (cached_has_bits & 0x00000020u) {
      proposalid_ = from.proposalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      acceptedproposalid_ = from.acceptedproposalid_;
    }
    if (cached_has_bits & 0x00000080u) {
      acceptednodeid_ = from.acceptednodeid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      reject_ = from.reject_;
    }
    if (cached_has_bits & 0x00000200u) {
      promisedproposalid_ = from.promisedproposalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaxosMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tPaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaxosMsg::CopyFrom(const PaxosMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tPaxos.PaxosMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaxosMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void PaxosMsg::Swap(PaxosMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaxosMsg::InternalSwap(PaxosMsg* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(gltype_, other->gltype_);
  swap(instanceid_, other->instanceid_);
  swap(nodeid_, other->nodeid_);
  swap(iltype_, other->iltype_);
  swap(proposalid_, other->proposalid_);
  swap(acceptedproposalid_, other->acceptedproposalid_);
  swap(acceptednodeid_, other->acceptednodeid_);
  swap(reject_, other->reject_);
  swap(promisedproposalid_, other->promisedproposalid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaxosMsg::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tPaxos

// @@protoc_insertion_point(global_scope)
